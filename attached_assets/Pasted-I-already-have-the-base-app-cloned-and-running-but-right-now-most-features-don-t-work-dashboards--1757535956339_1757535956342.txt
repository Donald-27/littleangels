I already have the base app cloned and running, but right now most features don’t work — dashboards feel hardcoded, adding/removing/editing doesn’t actually function, and the UI is too plain.

I want you to rebuild, fix, and complete everything so that the app becomes a fully working, production-ready school management system for Little Angels Academy.

👉 Every single feature must work end-to-end. Nothing should remain as mock data or non-functional UI.

🔥 Backend (Complete & Real)

Use a production-grade backend with Postgres database.

Implement role-based authentication with different dashboards for: admin, teacher, student, parent, driver.

Store all data in relational tables: students, staff, teachers, parents, drivers, buses, routes, classes, attendance, grades, fees, announcements, etc.

Add secure file storage for images, report cards, documents, and bus route maps.

Enable real-time updates so that when data is added, updated, or removed, all dashboards reflect the changes instantly.

Apply fine-grained security policies so users only see data they’re authorized to view.

Seed the database with realistic data (students, staff, buses, classes, routes, announcements, events, fees) so I can immediately test adding, removing, and editing.

🎯 Dashboards (Must Work 100%)
Admin Dashboard

Manage students, teachers, parents, drivers, buses, and staff with full CRUD.

Assign teachers to classes, students to buses, and drivers to routes.

Manage fees (set, update, track balances, mark payments).

Update school settings (logo, name, grading system, term dates, holidays).

Generate reports: student lists, staff lists, fees, attendance summaries.

Track activity logs (who logged in, what changed).

Teacher Dashboard

View assigned classes and students.

Take attendance (daily/period-based).

Enter grades/exam marks → instantly visible to students and parents.

Add notes or remarks on students.

Send class announcements.

Generate and download report cards.

Student Dashboard

View personal profile and details.

See grades, attendance records, and report cards.

Check class timetable.

Receive announcements and assignments.

View assigned bus info (route, driver contact).

Parent Dashboard

Linked directly to their children.

See attendance, grades, report cards, and assignments.

Pay school fees online (integrated payments).

Receive announcements and event reminders.

Driver Dashboard

View assigned bus and route.

See student pickup/drop-off list.

Mark students as picked/dropped (updates parents in real time).

Report issues (lateness, breakdowns, incidents).

⚡ Extra Features to Add

Notifications system: in-app + email/SMS.

Events calendar: holidays, exams, school events, parent meetings.

Library module: borrow/return books, track overdue items.

Clinic/health module: student medical visits, health notes.

Clubs & extracurriculars: memberships, activities, and events.

GPS bus tracking (optional).

Dark mode toggle.

Multi-language support (English + Swahili/French).

🎨 UI/UX Expectations

Must be colorful, modern, and professional with beautiful dashboards.

Each role dashboard should feel unique but consistent with branding.

Use animations and smooth transitions for a lively experience.

Include interactive charts and graphs (attendance graphs, grade distribution, fees overview, bus stats).

Use cards, icons, gradients, and vibrant color palettes.

Mobile-first responsive design → works on phones, tablets, and desktops.

📌 Data Flow (Everything Connected & Live)

Admin creates/updates entities (students, staff, classes, routes) → changes instantly reflected in dashboards.

Teachers record attendance and grades → students and parents see updates live.

Parents pay fees → balances update instantly for admin.

Drivers mark pickups/drops → parents see real-time updates.

Announcements → appear across teacher, student, and parent dashboards.

Report cards → generated by teachers/admin, downloadable by students/parents.

✅ Final Must-Haves

No hardcoded or fake data anywhere — everything must come from the database.

Every CRUD feature must work across all dashboards.

Seed realistic data so I can test adding/removing/updating right away.

UI must be colorful, animated, interactive, and professional with lots of charts and visuals.

The app should feel complete, polished, and ready for deployment in a real school.

Add as many relevant and useful features as possible — go beyond the basics.

Nothing should be “just UI” — every button, form, and tab must function correctly.

⚡ Deliver a truly complete, fully functional, colorful, animated school management system that works end-to-end across all dashboards, with every feature live, dynamic, and production-ready. Nothing should remain incomplete or static.